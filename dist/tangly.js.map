{"version":3,"file":"tangly.js","sources":["../lib/crypto.js","../lib/iota.js","../lib/tangly.js"],"sourcesContent":["import CryptoJS from 'crypto-js';\n\nexport function encrypt(seed, data) {\n  return CryptoJS.AES.encrypt(JSON.stringify(data), seed).toString();\n}\n\nexport function decrypt(seed, encryptedData) {\n  var bytes = CryptoJS.AES.decrypt(encryptedData.toString(), seed);\n  return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n}","import IOTA from 'iota.lib.js';\nimport { decrypt } from './crypto.js';\n\nexport default class Iota {\n  constructor(node, seed) {\n    this.iota = new IOTA({\n      'provider': node\n    });\n    this.seed = seed;\n  }\n\n  getAccountData() {\n    return new Promise((resolve, reject) => {\n      return this.iota.api.getAccountData(this.seed, {}, function (err, accountData) {\n        if (err) {\n          console.log(err)\n          return reject(err);\n        }\n        return resolve(accountData);\n      })\n    })\n  }\n\n  getNewAddress() {\n    return new Promise((resolve, reject) => {\n      return this.iota.api.getNewAddress(this.seed, (err, address) => {\n        if (err) {\n          return reject(err);\n        }\n        return resolve(address);\n      })\n    })\n  }\n\n  sendTransfer(transferData) {\n    return new Promise((resolve, reject) => {\n      return this.iota.api.sendTransfer(this.seed, 4, 9, transferData, (err, transferObject) => {\n        if (err) {\n          return reject(err);\n        }\n        return resolve(transferObject);\n      })\n    })\n  }\n\n  extractTransferMessages(accountData) {\n    accountData.transfers.forEach((transfer) => {\n      debugger;\n      let message = this.iota.utils.extractJson(transfer);\n      if (message === null) return;\n      message = JSON.parse(message);\n      if (message.encryptedData) {\n        console.log(\"decrypted message: \", decrypt(this.seed, message.encryptedData));\n      }\n    })\n  }\n\n  fromTrytes(trytes) {\n    return this.iota.utils.fromTrytes(trytes)\n  }\n\n  async attachToTangle(data, config) {\n    debugger;\n    const newAddress = await this.getNewAddress();\n    debugger;\n    const transferData = [{\n      'address': newAddress,\n      'value': 0,\n      'message': this.iota.utils.toTrytes(JSON.stringify(data)),\n      'tag': config.tag\n    }]\n    this.sendTransfer(transferData)\n      .then((transferObject) => {\n        console.log(\"transfer object:\", transferObject);\n        return transferData;\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n      })\n  }\n}\n","import { encrypt, decrypt } from './crypto';\nimport Iota from './iota';\n\nexport default class Tangly {\n  constructor(config) {\n    this.seed = config.seed;\n    this.node = config.node;\n    this.iota = new Iota(this.node, this.seed);\n  }\n\n  async insert(data, config) {\n    console.log(\"INSERTING...\");\n    const encryptedData = encrypt(this.seed, data);\n    console.log(`encrypted data: ${encryptedData}`);\n    const dataObject = {\n      encryptedData\n    };\n    debugger;\n    const attachedData = await this.iota.attachToTangle(dataObject, config);\n    console.log(\"attachedData:\", attachedData);\n\n    const decryptedData = decrypt(this.seed, encryptedData);\n    console.log(`decrypted data: ${JSON.stringify(decryptedData)}`);\n  }\n\n  async find(field) {\n    console.log(\"finding fields...\")\n    const accountData = await this.iota.getAccountData();\n    const messages = this.iota.extractTransferMessages(accountData);\n    console.log(\"account data:\", accountData);\n  }\n}\n"],"names":[],"mappings":"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"}